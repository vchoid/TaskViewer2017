package de.gokv.client.taskviewer.view;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.Insets;

import javax.swing.ImageIcon;
import javax.swing.JTextField;

import de.gokv.client.taskviewer.controller.FilterCriteriaPanelActionContr;
import de.gokv.client.taskviewer.controller.FilterCriteriaPanelKeyContr;
import de.gokv.client.taskviewer.controller.FrameTaskViewerController;

public class TFilterCriteriaPanelTemplate extends TBlockPanelTemplate {
	private static final long serialVersionUID = 1L;
	
	
	public PPlaceholderTextFieldPattern kvnrPh;
	public PPlaceholderTextFieldPattern namePh;
	public PPlaceholderTextFieldPattern vnamePh;
	public PPlaceholderTextFieldPattern taskIdPh;
	
	public PDatePickerFieldPattern gebDatePickerField;
	public PDatePickerFieldPattern orderDatePickerField;
	
	public PGridBagButtonPattern clearAllBtn;
	public PGridBagButtonPattern filterBtn;
	public JTextField anzFiltEntriesTf;
	public String valFiltMsg = "";
	
	private Image iconReload;
	private String pathIconReload;
	private ImageIcon iconReloadScaled;
	
	public TFilterCriteriaPanelTemplate(FrameTaskViewerController controller) {
		super("Filter Maske", controller);
	}

	@Override
	public GridBagLayout getLayout() {
		GridBagLayout layout = new GridBagLayout();
		layout.columnWidths = new int[] { 10, 210, 210, 10 };
		layout.rowHeights = new int[] {40,35,35,35,35,35,35,40 };
		return layout;
	}

	@Override
	public void init() {
		FilterCriteriaPanelActionContr filtCPActContr = new FilterCriteriaPanelActionContr();
		FilterCriteriaPanelKeyContr filtCPKeyContr = new FilterCriteriaPanelKeyContr();
		
		// << KVNR >>
		kvnrPh = new PPlaceholderTextFieldPattern("Krankenversichertennummer (laut eGk)", getLayout().columnWidths[1]*2, 1, 1, 2 );
		this.add(kvnrPh, kvnrPh.getGbc_placeholder());

		// << Name >>
		namePh = new PPlaceholderTextFieldPattern("Name", getLayout().columnWidths[1]-5,1,2,1);
		this.add(namePh, namePh.getGbc_placeholder());

		// << Vorname >>
		vnamePh = new PPlaceholderTextFieldPattern("Vorname", getLayout().columnWidths[2]-10,2,2,1);
		vnamePh.getGbc_placeholder().insets = new Insets(0, 10, 0, 0);
		this.add(vnamePh, vnamePh.getGbc_placeholder());

		// << Geburtsdatum >>
		gebDatePickerField = new PDatePickerFieldPattern("Geburtstag",1 ,3);
		this.add(gebDatePickerField.getDateLabel(), gebDatePickerField.getGbc_dateLabel());
		this.add(gebDatePickerField.getDatePickerImpl(), gebDatePickerField.getGbc_date());

		// << TaskID >>
		taskIdPh = new PPlaceholderTextFieldPattern("TaskID", getLayout().columnWidths[1]*2,1,4,2);
		this.add(taskIdPh, taskIdPh.getGbc_placeholder());

		// << OrderedDate >>
		orderDatePickerField = new PDatePickerFieldPattern("Order Date",1 ,5);
		this.add(orderDatePickerField.getDateLabel(), orderDatePickerField.getGbc_dateLabel());
		this.add(orderDatePickerField.getDatePickerImpl(), orderDatePickerField.getGbc_date());

		// << Button "Felder leeren" >>
		clearAllBtn = new PGridBagButtonPattern(" Felder zurücksetzen ", 1, 6, 2, filtCPActContr);
		clearAllBtn.getGbc_button().insets = new Insets(20, 0, 0, 0);
		pathIconReload = "/deleteIcon/del_white.png";
		iconReload = new ImageIcon(getClass().getResource(pathIconReload)).getImage();
		iconReloadScaled = new ImageIcon(iconReload);
		clearAllBtn.getButton().setIcon(iconReloadScaled);
		this.add(clearAllBtn.getButton(), clearAllBtn.getGbc_button());
		
		// Anzahl der gefilterten Tasks
		anzFiltEntriesTf = new JTextField();
		anzFiltEntriesTf.setForeground(colorEntryTxt);
		anzFiltEntriesTf.setBorder(emptyBorder);
		anzFiltEntriesTf.addActionListener(filtCPActContr);
		anzFiltEntriesTf.addKeyListener(filtCPKeyContr);
		anzFiltEntriesTf.setOpaque(false);
		this.add(anzFiltEntriesTf);
		GridBagConstraints gbc_anzFiltTask = new GridBagConstraints();
		gbc_anzFiltTask.anchor = GridBagConstraints.NORTH;
		gbc_anzFiltTask.fill = GridBagConstraints.HORIZONTAL;
		gbc_anzFiltTask.insets = new Insets(5, 0, 0, 0);
		gbc_anzFiltTask.gridwidth = 1;
		gbc_anzFiltTask.gridx = 1;
		gbc_anzFiltTask.gridy = 7;
		this.add(anzFiltEntriesTf, gbc_anzFiltTask);
	}

}
